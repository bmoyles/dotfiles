#!/bin/zsh

export DOTDIR="${HOME}"/.dotfiles
setopt nullglob

for __profile_d in /etc/profile.d/*.sh; do
  emulate sh -c ". ${__profile_d}"
done
unset __profile_d

for __common_cfg in "${DOTDIR}"/shell/common/*; do
  . "${__common_cfg}"
done
unset __common_cfg

# interactive-only
if [[ ! -o interactive ]]; then
  return
fi


## History
export HISTFILE=${HOME}/.zsh_history
export HISTSIZE=10000
export SAVEHIST=10000
setopt append_history
setopt autopushd
setopt extended_history
setopt hist_ignore_all_dups
setopt hist_reduce_blanks
setopt hist_verify
setopt inc_append_history
setopt pushd_ignore_dups
setopt share_history


## command-not-found
command_not_found_handler() {
  if [[ -x /usr/lib/command-not-found ]]; then
    /usr/lib/command-not-found -- "$1"
    return $?
  else
    printf '%s: command not found\n' "$1" >&2
    return 127
  fi
}


## Shush
setopt nobeep


## make sure run-help is available
unalias run-help 2>/dev/null
autoload run-help
export HELPDIR=/usr/share/zsh/help


## Editor
bindkey -e

autoload -U edit-command-line
zle -N edit-command-line
bindkey '^f' edit-command-line

function insert_sudo {
  zle beginning-of-line
  zle -U 'sudo '
}
zle -N insert-sudo insert_sudo
bindkey '^[s' insert-sudo


## Prompt
. "${ZDOTDIR}"/prompt/all.zsh


## Completions
. "${ZDOTDIR}/completion"


## zplug
export ZPLUG_HOME=~/.zplug
if [[ -r ${ZPLUG_HOME}/init.zsh ]]; then
  . "${ZPLUG_HOME}"/init.zsh

  zplug 'zplug/zplug', hook-build:'zplug --self-manage'
  zplug "zsh-users/zsh-completions"
  zplug "zsh-users/zsh-history-substring-search"
  if (( ${+commands[fuck]} )); then
    zplug "plugins/thefuck", from:oh-my-zsh
  fi
  zplug "zsh-users/zsh-syntax-highlighting", defer:2
  zplug "${ZDOTDIR}/plugins", from:local, if:"[[ -d ${ZDOTDIR}/plugins ]]"
  zplug "${DOTLOCAL}/shell/zsh/plugins", from:local, if:"[[ -d ${DOTLOCAL}/shell/zsh/plugins ]]"
  zplug load

  if zplug check "zsh-users/zsh-history-substring-search"; then
    bindkey '^[[A' history-substring-search-up
    bindkey '^[[B' history-substring-search-down
  fi
fi

if [[ -r ${DOTLOCAL}/shell/zshrc ]]; then
  . "${DOTLOCAL}"/shell/zshrc
fi
