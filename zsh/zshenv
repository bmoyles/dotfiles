#!/usr/bin/env zsh
_zshenv_set_distro() {
  emulate -L zsh
  if [[ ${OS} = linux ]]; then
    if [[ -f /etc/redhat-release ]]; then
      DISTRO=rhel
    elif [[ -f /etc/debian_version ]]; then
      DISTRO=deb
    fi
    if [[ -n "${DISTRO}" ]]; then
      readonly -x DISTRO
    fi
  fi
}

readonly -lx OS=$(uname -s)
_zshenv_set_distro; unset -f _zshenv_set_distro

typeset -ax _zsh_config_flavors
_zsh_config_flavors=( all ${OS:+${OS}} ${DISTRO:+${DISTRO}} )
readonly _zsh_config_flavors

typeset -ax _zsh_config_dirs
_zsh_config_dirs=( "${ZDOTDIR}" "${DOTLOCAL}/zsh" )
readonly _zsh_config_dirs

local -a _config_sections
_config_sections=( pre_zshenv env path functions post_zshenv )

local _config_dir
local _config_section
local _config_file

for _config_section in ${_config_sections[@]}; do
  for _config_dir in ${_zsh_config_dirs[@]}; do
    for _config_file in ${_config_dir}/${_config_section}/${^_zsh_config_flavors}.zsh(N); do
      source ${_config_file}
    done
  done
done

unset _config_dir _config_sections _config_section _config_file


TRAPUSR1() {
  if [[ -o INTERACTIVE ]]; then
    if [[ -o zle ]]; then
      zle -I
    fi
    printf "\nReceived USR1, restarting zsh (%s)\n" "${SHELL}"
    exec "${SHELL}"
  fi
}

# vim: ft=zsh sts=2 ts=2 sw=2 expandtab
